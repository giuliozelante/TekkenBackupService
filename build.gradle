plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.11'
    id 'com.gluonhq.gluonfx-gradle-plugin' version '1.0.11'
    id 'io.freefair.lombok' version '6.3.0'
    id "com.palantir.graal" version "0.10.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

// import org.apache.tools.ant.taskdefs.condition.Os

javafx {
    version = '16'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

group 'org.gzelante'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

run {
    jvmArgs=["-agentlib:native-image-agent=config-merge-dir=src/main/resources/META-INF/native-image"]
}

dependencies {
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

mainClassName = 'org.gzelante.tbs.MainApp'
// graalvmHome = "C:\\Users\\neo16\\scoop\\apps\\graalvm-lts-jdk11\\current\\"
/*
graal {
    mainClass 'org.gzelante.tbs.MainApp'
    outputName 'tekken-backup-service'
    graalVersion "21.0.0.2"
    javaVersion "11"

    //option "--no-fallback"
    //option "--allow-incomplete-classpath"

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        // May be possible without, but autodetection is problematic on Windows 10
        // see https://github.com/palantir/gradle-graal
        // see https://www.graalvm.org/docs/reference-manual/native-image/#prerequisites
        windowsVsVarsPath("G:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat")
    }
}


nativeCompile.doFirst {
    ProcessBuilder processBuilder = new ProcessBuilder("cmd.exe", "/c", "echo", "\"inizio programma\"")
    Map<String, String> env = processBuilder.environment()
    env.each { k,v -> println "$k : $v" }
    env.put("GRAALVM_HOME", "C:\\Users\\neo16\\scoop\\apps\\graalvm-lts-jdk11\\current\\")
    processBuilder.start().waitFor()
}*/
